import React, { useState, useRef, useEffect } from 'react'
import styles from './HuluPressCarousel.module.css'
import { HuluPressCarouselData } from './HuluPressCarouselData'
import { HuluPressSliderHeader } from '../h1/h1'
import { PressSliderButton } from '../Buttons/Buttons' 
import { HuluPressCarouselImg } from '../Images/images'


const HuluPressCarousel = () => {

    const [data] = useState(HuluPressCarouselData);
    const [slide, setSlide] = useState(0);
    const carousel = useRef(null);

    const nextSlide = () => {
      const newSlide = (slide + 1) % data.length;
      setSlide(newSlide);
      carousel.current.style.transform = `translateX(${-(100 * newSlide / data.length)}%)`;
    };
    
    const previousSlide = () => {
      const newSlide = (slide - 1 + data.length) % data.length;
      setSlide(newSlide);
      carousel.current.style.transform = `translateX(${-(100 * newSlide / data.length)}%)`;
    };

    const goToSlide = (index) =>{
      setSlide(index);
      carousel.current.style.transform = `translateX(${-(100 * index / data.length)}%`;
    }

    useEffect(() => {
      const move= setInterval(() => {
          nextSlide();
      }, 7000);
      return () => {
        clearInterval(move);
      };
    }, [slide]);


  return (
    <>
      <div className={styles.OuterCarousel}>
        <div className={styles.innercarouselContainer}>
          <svg onClick={previousSlide} className={styles.arrowLeft} xmlns="http://www.w3.org/2000/svg" width="46" height="46" viewBox="0 0 46 46"><g fill="none" fillRule="evenodd" transform="matrix(-1 0 0 1 46 0)"><path fill="#FFF" d="M23,0 C35.7025492,0 46,10.2974508 46,23 C46,35.7025492 35.7025492,46 23,46 C10.2974508,46 0,35.7025492 0,23 C0,10.2974508 10.2974508,0 23,0 Z M21.7692308,13 L19,15.9032258 L25.7692308,22.6774194 L19,30.0967742 L21.7692308,33 L31,22.6774194 L21.7692308,13 Z" opacity=".8"></path><polygon fill="#151515" points="0 2.903 2.925 0 12.675 9.677 2.925 20 0 17.097 7.15 9.677" transform="translate(19 13)"></polygon></g>
          </svg>
        <div className={styles.slides} ref={carousel}>
        {data.map((item, index) => {
          return (
              <>
                  <div className={`${slide === index ? styles.slideActive : styles.slide}`}>
                    <div className={styles.carouselImgBox}>
                          <HuluPressCarouselImg src={item.imgSrc} className={styles.carouselImg} />
                    </div>
        
                    <div className={`${slide === index ? styles.slideContentActive : styles.slideContent}`}>
                          <svg class={styles.heroLabel} aria-label="Hulu Original" xmlns="http://www.w3.org/2000/svg" width="317" height="34" viewBox="0 0 317 34">
                      <path fill="#151515" d="M42.5038393,33.682243 L42.5038393,20.082243 C42.5038393,19.4890966 42.7222879,18.9806854 43.1591849,18.5570093 C43.5960819,18.1333333 44.1057951,17.9214953 44.6883245,17.9214953 L49.3069502,17.9214953 C49.8894796,17.9214953 50.3887904,18.1333333 50.8048829,18.5570093 C51.2209753,18.9806854 51.4290215,19.4890966 51.4290215,20.082243 L51.4290215,33.682243 L59.4179957,33.682243 L59.4179957,19.0018692 C59.4179957,16.0785047 58.5858109,13.9283489 56.9214412,12.5514019 C55.2570716,11.1744548 53.0725865,10.4859813 50.3679858,10.4859813 L45.2500492,10.4859813 C44.5010829,10.4859813 43.8561397,10.5601246 43.3152195,10.7084112 C42.7742994,10.8566978 42.5038393,10.9520249 42.5038393,10.9943925 L42.5038393,0 L34.5148651,0 L34.5148651,33.682243 L42.5038393,33.682243 Z M104.10632,33.682243 L104.10632,0 L96.1173459,0 L96.1173459,33.682243 L104.10632,33.682243 Z M159.654656,34 C161.735118,34 163.628339,33.4809969 165.334318,32.4429907 C167.040297,31.4049844 168.371792,29.9856698 169.328805,28.1850467 C170.285817,26.3844237 170.764324,24.3613707 170.764324,22.1158879 C170.764324,19.870405 170.285817,17.8367601 169.328805,16.0149533 C168.371792,14.1931464 167.040297,12.7632399 165.334318,11.7252336 C163.628339,10.6872274 161.735118,10.1682243 159.654656,10.1682243 C157.574194,10.1682243 155.680974,10.6872274 153.974995,11.7252336 C152.269016,12.7632399 150.937521,14.1931464 149.980508,16.0149533 C149.023495,17.8367601 148.544989,19.870405 148.544989,22.1158879 C148.544989,24.3613707 149.023495,26.3844237 149.980508,28.1850467 C150.937521,29.9856698 152.269016,31.4049844 153.974995,32.4429907 C155.680974,33.4809969 157.574194,34 159.654656,34 Z M223.441622,34 C226.645534,34 229.225307,32.9196262 231.180941,30.7588785 C233.136575,28.5981308 234.114393,25.8018692 234.114393,22.3700935 C234.114393,22.0311526 234.093588,21.7345794 234.051979,21.4803738 L222.006104,21.4803738 L222.006104,24.0859813 L231.180941,24.0859813 C230.889676,26.2890966 230.067894,28.0579439 228.715594,29.3925234 C227.363293,30.7271028 225.626108,31.3943925 223.504036,31.3943925 C221.0907,31.3943925 219.083054,30.5046729 217.481099,28.7252336 C215.879143,26.9457944 215.078165,24.7426791 215.078165,22.1158879 C215.078165,19.446729 215.868741,17.2224299 217.449892,15.4429907 C219.031043,13.6635514 221.007482,12.7738318 223.379209,12.7738318 C225.001969,12.7738318 226.406281,13.1657321 227.592144,13.9495327 C228.778007,14.7333333 229.683008,15.8242991 230.307147,17.2224299 L233.240599,17.2224299 C232.533241,15.0193146 231.326573,13.2928349 229.620595,12.0429907 C227.914616,10.7931464 225.834154,10.1682243 223.379209,10.1682243 C221.298746,10.1682243 219.405526,10.6872274 217.699547,11.7252336 C215.993568,12.7632399 214.662073,14.1931464 213.70506,16.0149533 C212.748048,17.8367601 212.269541,19.870405 212.269541,22.1158879 C212.269541,24.3613707 212.748048,26.3844237 213.70506,28.1850467 C214.662073,29.9856698 215.993568,31.4049844 217.699547,32.4429907 C219.405526,33.4809969 221.319551,34 223.441622,34 Z M2.93345147,33.682243 L5.05552274,27.7084112 L15.5410514,27.7084112 L17.6631227,33.682243 L20.5965741,33.682243 L12.0458752,10.4859813 L8.55069896,10.4859813 L0,33.682243 L2.93345147,33.682243 Z M82.0118133,33.682243 C84.4667585,33.682243 86.4119905,32.8560748 87.8475094,31.2037383 C89.2830282,29.5514019 90.0007876,27.411838 90.0007876,24.7850467 L90.0007876,10.4859813 L82.0118133,10.4859813 L82.0118133,24.0859813 C82.0118133,24.6791277 81.8037671,25.1875389 81.3876747,25.611215 C80.9715823,26.034891 80.4722714,26.246729 79.8897421,26.246729 L75.2711164,26.246729 C74.688587,26.246729 74.1892761,26.034891 73.7731837,25.611215 C73.3570913,25.1875389 73.1490451,24.6791277 73.1490451,24.0859813 L73.1490451,10.4859813 L65.1600709,10.4859813 L65.1600709,24.7850467 C65.1600709,27.6660436 65.9714511,29.8691589 67.5942115,31.3943925 C69.2169718,32.9196262 71.4222616,33.682243 74.2100807,33.682243 L82.0118133,33.682243 Z M127.074621,33.682243 C129.529566,33.682243 131.474798,32.8560748 132.910317,31.2037383 C134.345836,29.5514019 135.063595,27.411838 135.063595,24.7850467 L135.063595,10.4859813 L127.074621,10.4859813 L127.074621,24.0859813 C127.074621,24.6791277 126.866575,25.1875389 126.450482,25.611215 C126.03439,26.034891 125.535079,26.246729 124.95255,26.246729 L120.27151,26.246729 C119.688981,26.246729 119.18967,26.034891 118.773577,25.611215 C118.357485,25.1875389 118.149439,24.6791277 118.149439,24.0859813 L118.149439,10.4859813 L110.160465,10.4859813 L110.160465,24.7850467 C110.160465,27.623676 110.982247,29.8161994 112.625812,31.3626168 C114.269377,32.9090343 116.485069,33.682243 119.272888,33.682243 L127.074621,33.682243 Z M181.125025,33.682243 L181.125025,24.1495327 L186.555031,24.1495327 L191.735381,33.682243 L194.856074,33.682243 L189.363654,23.7682243 C190.736759,23.3869159 191.849806,22.6242991 192.702796,21.4803738 C193.555785,20.3364486 193.98228,18.9383178 193.98228,17.2859813 C193.98228,15.9302181 193.701418,14.7439252 193.139693,13.7271028 C192.577968,12.7102804 191.797795,11.9264798 190.799173,11.3757009 C189.717333,10.7825545 188.469056,10.4859813 187.054341,10.4859813 L178.378815,10.4859813 L178.378815,33.682243 L181.125025,33.682243 Z M204.717464,33.682243 L204.717464,10.4859813 L201.971254,10.4859813 L201.971254,33.682243 L204.717464,33.682243 Z M244.41268,33.682243 L244.41268,10.4859813 L241.66647,10.4859813 L241.66647,33.682243 L244.41268,33.682243 Z M255.397519,33.682243 L255.397519,15.0616822 L266.319945,33.682243 L269.440638,33.682243 L269.440638,10.4859813 L266.694428,10.4859813 L266.694428,28.9794393 L255.772002,10.4859813 L252.651309,10.4859813 L252.651309,33.682243 L255.397519,33.682243 Z M278.927545,33.682243 L281.049616,27.7084112 L291.535145,27.7084112 L293.657216,33.682243 L296.590667,33.682243 L288.039968,10.4859813 L284.544792,10.4859813 L275.994093,33.682243 L278.927545,33.682243 Z M317,33.682243 L317,31.0766355 L305.952747,31.0766355 L305.952747,10.4859813 L303.206537,10.4859813 L303.206537,33.682243 L317,33.682243 Z M159.654656,31.3943925 C157.28293,31.3943925 155.306491,30.5046729 153.72534,28.7252336 C152.144188,26.9457944 151.353613,24.7426791 151.353613,22.1158879 C151.353613,19.446729 152.144188,17.2224299 153.72534,15.4429907 C155.306491,13.6635514 157.28293,12.7738318 159.654656,12.7738318 C162.026383,12.7738318 164.002822,13.6635514 165.583973,15.4429907 C167.165124,17.2224299 167.9557,19.446729 167.9557,22.1158879 C167.9557,24.7426791 167.165124,26.9457944 165.583973,28.7252336 C164.002822,30.5046729 162.026383,31.3943925 159.654656,31.3943925 Z M14.6048435,25.1028037 L5.99173066,25.1028037 L10.2982871,13.0280374 L14.6048435,25.1028037 Z M290.598937,25.1028037 L281.985824,25.1028037 L286.29238,13.0280374 L290.598937,25.1028037 Z M187.054341,21.5439252 L181.125025,21.5439252 L181.125025,13.0915888 L186.991928,13.0915888 C188.240205,13.0915888 189.259631,13.4623053 190.050207,14.2037383 C190.840782,14.9451713 191.23607,15.9725857 191.23607,17.2859813 C191.23607,18.6417445 190.851185,19.6903427 190.081414,20.4317757 C189.311643,21.1732087 188.302619,21.5439252 187.054341,21.5439252 Z"></path>
                          </svg>
                      <HuluPressSliderHeader>{item.header}</HuluPressSliderHeader>
                      <p className={styles.streaming}>{item.streaming}</p>
                      <PressSliderButton>LEARN MORE</PressSliderButton>
                    </div>
                  
                  </div>
              </>
            
            )
            
        })} 
        
        </div> 
          <svg onClick={nextSlide} className={styles.arrowRight} xmlns="http://www.w3.org/2000/svg" width="46" height="46" viewBox="0 0 46 46"><g fill="none" fillRule="evenodd"><path fill="#FFF" d="M23,0 C35.7025492,0 46,10.2974508 46,23 C46,35.7025492 35.7025492,46 23,46 C10.2974508,46 0,35.7025492 0,23 C0,10.2974508 10.2974508,0 23,0 Z M21.7692308,13 L19,15.9032258 L25.7692308,22.6774194 L19,30.0967742 L21.7692308,33 L31,22.6774194 L21.7692308,13 Z" opacity=".8"></path><polygon fill="#151515" points="0 2.903 2.925 0 12.675 9.677 2.925 20 0 17.097 7.15 9.677" transform="translate(19 13)"></polygon></g></svg>
        </div>

        <span className={styles.indicators}>
              {data.map((_, index) => {
                return (
                      <span className={`${slide === index ? styles.indicatorActive : styles.indicator}`} onClick={() => goToSlide(index)}></span>
                  )
              })}
        </span>
      </div>

    </>
  )
}

export default HuluPressCarousel
